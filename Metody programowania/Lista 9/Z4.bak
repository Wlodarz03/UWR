#lang racket

(define morse-code-map '((#\a . ".-") (#\b . "-...") (#\c . "-.-.") (#\d . "-..") (#\e . ".")
                           (#\f . "..-.") (#\g . "--.") (#\h . "....") (#\i . "..") (#\j . ".---")
                           (#\k . "-.-") (#\l . ".-..") (#\m . "--") (#\n . "-.") (#\o . "---")
                           (#\p . ".--.") (#\q . "--.-") (#\r . ".-.") (#\s . "...") (#\t . "-")
                           (#\u . "..-") (#\v . "...-") (#\w . ".--") (#\x . "-..-") (#\y . "-.--")
                           (#\z . "--..") (#\1 . ".----") (#\2 . "..---") (#\3 . "...--")
                           (#\4 . "....-") (#\5 . ".....") (#\6 . "-....") (#\7 . "--...")
                           (#\8 . "---..") (#\9 . "----.") (#\0 . "-----") (#\space . "  ")
                           (#\. . ".-.-.-")(#\, . "--..--")(#\? . "..--..")(#\! . "-.-.--")))

(define (list-slowo s)
  (string->list (string-downcase s)))

(define (char->morse c)
  (cdr (assoc c morse-code-map)))

(define (list-to-morse s)
  (map char->morse (list-slowo s)))

(define (morse-code s)
  (string-join (list-to-morse s) " "))


